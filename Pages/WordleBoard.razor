@using System.Text.RegularExpressions;

<div id="wordle-board" class="">

    @for (int i = 0; i < maxGuessCount; i++)
    {
        <div class="row">
            @for (int j = 0; j < word.Length; j++)
            {
                <div class="@GetCellColor(i,j)">@GetChar(i, j)</div>
            }
        </div>
    }
</div>

@code {
    [Parameter]
    public int maxGuessCount { get; set; } = 6;

    string word = "APMLY";

    // List<string> guesses = new()
    // {
    //     "PEEPO",
    //     "STALK",
    //     "TALAS",
    //     "CRASH",
    //     "WATER",
    //     "TRASH",
    // };

    List<string> guesses = new()
    {
        "POINT",
        "APPLY",
        "PUPPY",
        "AMPLY",
        "APMLY",
        "-----",
    };

    string GetCellColor(int i, int j)
    {
        return "cell color-wrong";
    }


    public IList<int> AllIndexOf(string text, string str, StringComparison comparisonType = StringComparison.InvariantCultureIgnoreCase)
    {
        IList<int> allIndexOf = new List<int>();
        int index = text.IndexOf(str, comparisonType);
        while (index != -1)
        {
            allIndexOf.Add(index);
            index = text.IndexOf(str, index + 1, comparisonType);
        }
        return allIndexOf;
    }


    char GetChar(int i, int j)
    {
        return guesses[i][j];
    }

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }
}
